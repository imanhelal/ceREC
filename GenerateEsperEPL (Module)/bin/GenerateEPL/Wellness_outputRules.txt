// create a table to hold the state of the current caseID
create table Cases (caseID long primary key);

//an incoming stream of unlabeled events (activity name and its timestamp) 
create schema UnlabeledEvent(caseID long, activity string, timestamp long, probability double);
@Name('Unlabeled') select * from UnlabeledEvent;

//an outgoing stream of final labeled events (caseID, activity name, its timestamp, calculated probability )
create schema LabeledEvent(caseID long, activity string, timestamp long, probability double);
@Name('Labeled') select * from LabeledEvent;

//an intermediate stream to check the possible labels for incoming unlabeled events. These should be temporary and need to be deleted after usage. 
create schema TempEvent (caseID long, activity string, timestamp long, probability double);
@Name('TempEvent') select * from TempEvent ;
@Name('Unlabeled') select * from UnlabeledEvent; 
@Name('Labeled') select * from LabeledEvent; 
 @Name('FilterLabeledEvent') select * from FilterLabeledEvent; 
@Name('Temp') select * from TempEvent ; 
@Name('get_case_ID')  insert into Cases  select (select coalesce(max(caseID)+1, 1)  from  Cases )  as caseID from UnlabeledEvent  where  activity in ('a');  
@Name('start_case_a')  insert into FilterLabeledEvent (caseID, activity, timestamp, probability)  select (select coalesce(max(caseID)+1,1) from Cases) as caseID, UE.activity, UE.timestamp, 1.0  from UnlabeledEvent as UE where UE.activity = 'a'; 

@Priority(5) @Name('TE_b') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'b' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity = 'a') -> every succ=UnlabeledEvent(activity='b')) where timer:within(31 min)]#time(31 min)  where (succ.timestamp - pred.timestamp) >= 1200000 and (succ.timestamp - pred.timestamp) <=1800000;

@Priority(20) @Name('Correlate_b') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'b'  group by caseID order by timestamp desc limit 5 ; 

@Priority(50) @Name('Filter_b') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 'b'  and probability >= 0.0 group by caseID order by probability desc limit 5 ;

@Priority(5) @Name('TE_c') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'c' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity = 'a') -> every succ=UnlabeledEvent(activity='c')) where timer:within(11 min)]#time(11 min)  where (succ.timestamp - pred.timestamp) >= 420000 and (succ.timestamp - pred.timestamp) <=600000;

@Priority(20) @Name('Correlate_c') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'c'  group by caseID order by timestamp desc limit 5 ; 

@Priority(50) @Name('Filter_c') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 'c'  and probability >= 0.0 group by caseID order by probability desc limit 5 ;

@Priority(5) @Name('TE_d') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'd' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity = 'a') -> every succ=UnlabeledEvent(activity='d')) where timer:within(11 min)]#time(11 min)  where (succ.timestamp - pred.timestamp) >= 300000 and (succ.timestamp - pred.timestamp) <=600000;

@Priority(20) @Name('Correlate_d') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'd'  group by caseID order by timestamp desc limit 5 ; 

@Priority(50) @Name('Filter_d') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 'd'  and probability >= 0.0 group by caseID order by probability desc limit 5 ;

@Priority(5) @Name('TE_e') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'e' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='g') -> every succ=UnlabeledEvent(activity='e'))  or ((every pred=FilterLabeledEvent(activity='b') and every inter1 = FilterLabeledEvent(activity='c') and every inter2 = FilterLabeledEvent(activity='d')) -> every succ=UnlabeledEvent(activity='e')) where timer:within(11 min) ]#time(11 min)  where ( pred.caseID = inter1.caseID and pred.caseID = inter2.caseID and (succ.timestamp - max(pred.timestamp,inter1.timestamp,inter2.timestamp)) >= 120000 and (succ.timestamp - max(pred.timestamp,inter1.timestamp,inter2.timestamp)) <=600000 ) or ( (succ.timestamp - pred.timestamp) >= 120000 and (succ.timestamp - pred.timestamp) <=600000 )  ;

@Priority(20) @Name('Correlate_e') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'e'  group by caseID order by timestamp desc limit 5 ; 

@Priority(50) @Name('Filter_e') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 'e'  and probability >= 0.0 group by caseID order by probability desc limit 5 ;

@Priority(5) @Name('TE_f') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'f' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity = 'e') -> every succ=UnlabeledEvent(activity='f')) where timer:within(4321 min)]#time(4321 min)  where (succ.timestamp - pred.timestamp) >= 600000 and (succ.timestamp - pred.timestamp) <=259200000;

@Priority(20) @Name('Correlate_f') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'f'  group by caseID order by timestamp desc limit 5 ; 

@Priority(50) @Name('Filter_f') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 'f'  and probability >= 0.0 group by caseID order by probability desc limit 5 ;

@Priority(5) @Name('TE_g') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'g' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity = 'f') -> every succ=UnlabeledEvent(activity='g')) where timer:within(121 min)]#time(121 min)  where (succ.timestamp - pred.timestamp) >= 1800000 and (succ.timestamp - pred.timestamp) <=7200000;

@Priority(20) @Name('Correlate_g') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'g'  group by caseID order by timestamp desc limit 5 ; 

@Priority(50) @Name('Filter_g') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 'g'  and probability >= 0.0 group by caseID order by probability desc limit 5 ;

@Priority(5) @Name('TE_h') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'h' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity = 'f') -> every succ=UnlabeledEvent(activity='h')) where timer:within(91 min)]#time(91 min)  where (succ.timestamp - pred.timestamp) >= 2400000 and (succ.timestamp - pred.timestamp) <=5400000;

@Priority(20) @Name('Correlate_h') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'h'  group by caseID order by timestamp desc limit 5 ; 

@Priority(50) @Name('Filter_h') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 'h'  and probability >= 0.0 group by caseID order by probability desc limit 5 ;

@Priority(5) @Name('TE_i') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'i' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='f' or activity='h') -> every succ=UnlabeledEvent(activity='i')) where timer:within(61 min)]#time(61 min)  where (succ.timestamp - pred.timestamp) >= 1800000 and (succ.timestamp - pred.timestamp) <=3600000;

@Priority(20) @Name('Correlate_i') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'i'  group by caseID order by timestamp desc limit 5 ; 

@Priority(50) @Name('Filter_i') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 'i'  and probability >= 0.0 group by caseID order by probability desc limit 5 ;

@Priority(5) @Name('TE_j') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'j' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity = 'i') -> every succ=UnlabeledEvent(activity='j')) where timer:within(11 min)]#time(11 min)  where (succ.timestamp - pred.timestamp) >= 300000 and (succ.timestamp - pred.timestamp) <=600000;

@Priority(20) @Name('Correlate_j') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'j'  group by caseID order by timestamp desc limit 5 ; 

@Priority(50) @Name('Filter_j') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 'j'  and probability >= 0.0 group by caseID order by probability desc limit 5 ;

@Priority(5) @Name('TE_k') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'k' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity = 'j') -> every succ=UnlabeledEvent(activity='k')) where timer:within(6 min)]#time(6 min)  where (succ.timestamp - pred.timestamp) >= 120000 and (succ.timestamp - pred.timestamp) <=300000;

@Priority(20) @Name('Correlate_k') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'k'  group by caseID order by timestamp desc limit 5 ; 

@Priority(50) @Name('Filter_k') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 'k'  and probability >= 0.0 group by caseID order by probability desc limit 5 ;

