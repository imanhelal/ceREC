// create a table to hold the state of the current caseID
create table Cases (caseID long primary key);

//an incoming stream of unlabeled events (activity name and its timestamp) 
create schema UnlabeledEvent(caseID long, activity string, timestamp long, probability double);
@Name('Unlabeled') select * from UnlabeledEvent;

//an outgoing stream of final labeled events (caseID, activity name, its timestamp, calculated probability )
create schema LabeledEvent(caseID long, activity string, timestamp long, probability double);
@Name('Labeled') select * from LabeledEvent;

//an intermediate stream to check the possible labels for incoming unlabeled events. These should be temporary and need to be deleted after usage. 
create schema TempEvent (caseID long, activity string, timestamp long, probability double);
@Name('TempEvent') select * from TempEvent ;
@Name('Unlabeled') select * from UnlabeledEvent; 
@Name('Labeled') select * from LabeledEvent; 
 @Name('FilterLabeledEvent') select * from FilterLabeledEvent; 
@Name('Temp') select * from TempEvent ; 
@Name('get_case_ID')  insert into Cases  select (select coalesce(max(caseID)+1, 1)  from  Cases )  as caseID from UnlabeledEvent  where  activity in ('confirmation of receipt');  
@Name('start_case_confirmation_of_receipt')  insert into FilterLabeledEvent (caseID, activity, timestamp, probability)  select (select coalesce(max(caseID)+1,1) from Cases) as caseID, UE.activity, UE.timestamp, 1.0  from UnlabeledEvent as UE where UE.activity = 'confirmation of receipt'; 

@Priority(5) @Name('TE_t15_print_document_x_request_unlicensed') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't15 print document x request unlicensed' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity = 't10 determine necessity to stop indication') -> every succ=UnlabeledEvent(activity='t15 print document x request unlicensed')) where timer:within(85 min)]#time(85 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=84780000;

@Priority(20) @Name('Correlate_t15_print_document_x_request_unlicensed') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't15 print document x request unlicensed'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t15_print_document_x_request_unlicensed') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't15 print document x request unlicensed'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t14_determine_document_x_request_unlicensed') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't14 determine document x request unlicensed' as activity, succ.timestamp as timestamp from pattern [((every pred=FilterLabeledEvent(activity='t04 determine confirmation of receipt') and every inter1 = FilterLabeledEvent(activity='t02 check confirmation of receipt')) -> every succ=UnlabeledEvent(activity='t14 determine document x request unlicensed')) where timer:within(86 min) ]#time(86 min)  where ( pred.caseID = inter1.caseID and (succ.timestamp - max(pred.timestamp,inter1.timestamp)) >= 0 and (succ.timestamp - max(pred.timestamp,inter1.timestamp)) <=85920000 ) ;

@Priority(20) @Name('Correlate_t14_determine_document_x_request_unlicensed') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't14 determine document x request unlicensed'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t14_determine_document_x_request_unlicensed') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't14 determine document x request unlicensed'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t10_determine_necessity_to_stop_indication') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't10 determine necessity to stop indication' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity = 't06 determine necessity of stop advice') -> every succ=UnlabeledEvent(activity='t10 determine necessity to stop indication')) where timer:within(87 min)]#time(87 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=86160000;

@Priority(20) @Name('Correlate_t10_determine_necessity_to_stop_indication') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't10 determine necessity to stop indication'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t10_determine_necessity_to_stop_indication') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't10 determine necessity to stop indication'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t19_determine_report_y_to_stop_indication') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't19 determine report y to stop indication' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity = 't17 check report y to stop indication') -> every succ=UnlabeledEvent(activity='t19 determine report y to stop indication')) where timer:within(1 min)]#time(1 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=180000;

@Priority(20) @Name('Correlate_t19_determine_report_y_to_stop_indication') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't19 determine report y to stop indication'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t19_determine_report_y_to_stop_indication') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't19 determine report y to stop indication'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t20_print_report_y_to_stop_indication') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't20 print report y to stop indication' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity = 't19 determine report y to stop indication') -> every succ=UnlabeledEvent(activity='t20 print report y to stop indication')) where timer:within(1 min)]#time(1 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=120000;

@Priority(20) @Name('Correlate_t20_print_report_y_to_stop_indication') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't20 print report y to stop indication'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t20_print_report_y_to_stop_indication') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't20 print report y to stop indication'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t18_adjust_report_y_to_stop_indicition') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't18 adjust report y to stop indicition' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity = 't17 check report y to stop indication') -> every succ=UnlabeledEvent(activity='t18 adjust report y to stop indicition')) where timer:within(1 min)]#time(1 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=60000;

@Priority(20) @Name('Correlate_t18_adjust_report_y_to_stop_indicition') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't18 adjust report y to stop indicition'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t18_adjust_report_y_to_stop_indicition') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't18 adjust report y to stop indicition'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t12_check_document_x_request_unlicensed') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't12 check document x request unlicensed' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity = 't11 create document x request unlicensed') -> every succ=UnlabeledEvent(activity='t12 check document x request unlicensed')) where timer:within(82 min)]#time(82 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=81540000;

@Priority(20) @Name('Correlate_t12_check_document_x_request_unlicensed') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't12 check document x request unlicensed'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t12_check_document_x_request_unlicensed') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't12 check document x request unlicensed'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t17_check_report_y_to_stop_indication') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't17 check report y to stop indication' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t16 report reasons to hold request' or activity='t18 adjust report y to stop indicition') -> every succ=UnlabeledEvent(activity='t17 check report y to stop indication')) where timer:within(1 min)]#time(1 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=780000;

@Priority(20) @Name('Correlate_t17_check_report_y_to_stop_indication') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't17 check report y to stop indication'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t17_check_report_y_to_stop_indication') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't17 check report y to stop indication'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t03_adjust_confirmation_of_receipt') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't03 adjust confirmation of receipt' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t03 adjust confirmation of receipt' or activity='t07-1 draft intern advice aspect 1' or activity='t07-2 draft intern advice aspect 2' or activity='t07-3 draft intern advice hold for aspect 3' or activity='t07-4 draft internal advice to hold for type 4' or activity='t07-5 draft intern advice aspect 5' or activity='t08 draft and send request for advice' or activity='t09-1 process or receive external advice from party 1' or activity='t09-2 process or receive external advice from party 2' or activity='t09-3 process or receive external advice from party 3' or activity='t09-4 process or receive external advice from party 4' or activity='confirmation of receipt') -> every succ=UnlabeledEvent(activity='t03 adjust confirmation of receipt')) where timer:within(86 min)]#time(86 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=85920000;

@Priority(20) @Name('Correlate_t03_adjust_confirmation_of_receipt') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't03 adjust confirmation of receipt'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t03_adjust_confirmation_of_receipt') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't03 adjust confirmation of receipt'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t07_1_draft_intern_advice_aspect_1') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't07-1 draft intern advice aspect 1' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t03 adjust confirmation of receipt' or activity='t07-1 draft intern advice aspect 1' or activity='t07-2 draft intern advice aspect 2' or activity='t07-3 draft intern advice hold for aspect 3' or activity='t07-4 draft internal advice to hold for type 4' or activity='t07-5 draft intern advice aspect 5' or activity='t08 draft and send request for advice' or activity='t09-1 process or receive external advice from party 1' or activity='t09-2 process or receive external advice from party 2' or activity='t09-3 process or receive external advice from party 3' or activity='t09-4 process or receive external advice from party 4' or activity='confirmation of receipt') -> every succ=UnlabeledEvent(activity='t07-1 draft intern advice aspect 1')) where timer:within(86 min)]#time(86 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=85680000;

@Priority(20) @Name('Correlate_t07_1_draft_intern_advice_aspect_1') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't07-1 draft intern advice aspect 1'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t07_1_draft_intern_advice_aspect_1') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't07-1 draft intern advice aspect 1'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t07_2_draft_intern_advice_aspect_2') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't07-2 draft intern advice aspect 2' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t03 adjust confirmation of receipt' or activity='t07-1 draft intern advice aspect 1' or activity='t07-2 draft intern advice aspect 2' or activity='t07-3 draft intern advice hold for aspect 3' or activity='t07-4 draft internal advice to hold for type 4' or activity='t07-5 draft intern advice aspect 5' or activity='t08 draft and send request for advice' or activity='t09-1 process or receive external advice from party 1' or activity='t09-2 process or receive external advice from party 2' or activity='t09-3 process or receive external advice from party 3' or activity='t09-4 process or receive external advice from party 4' or activity='confirmation of receipt') -> every succ=UnlabeledEvent(activity='t07-2 draft intern advice aspect 2')) where timer:within(86 min)]#time(86 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=85860000;

@Priority(20) @Name('Correlate_t07_2_draft_intern_advice_aspect_2') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't07-2 draft intern advice aspect 2'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t07_2_draft_intern_advice_aspect_2') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't07-2 draft intern advice aspect 2'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t07_3_draft_intern_advice_hold_for_aspect_3') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't07-3 draft intern advice hold for aspect 3' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t03 adjust confirmation of receipt' or activity='t07-1 draft intern advice aspect 1' or activity='t07-2 draft intern advice aspect 2' or activity='t07-3 draft intern advice hold for aspect 3' or activity='t07-4 draft internal advice to hold for type 4' or activity='t07-5 draft intern advice aspect 5' or activity='t08 draft and send request for advice' or activity='t09-1 process or receive external advice from party 1' or activity='t09-2 process or receive external advice from party 2' or activity='t09-3 process or receive external advice from party 3' or activity='t09-4 process or receive external advice from party 4' or activity='confirmation of receipt') -> every succ=UnlabeledEvent(activity='t07-3 draft intern advice hold for aspect 3')) where timer:within(3 min)]#time(3 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=2460000;

@Priority(20) @Name('Correlate_t07_3_draft_intern_advice_hold_for_aspect_3') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't07-3 draft intern advice hold for aspect 3'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t07_3_draft_intern_advice_hold_for_aspect_3') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't07-3 draft intern advice hold for aspect 3'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t07_4_draft_internal_advice_to_hold_for_type_4') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't07-4 draft internal advice to hold for type 4' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t03 adjust confirmation of receipt' or activity='t07-1 draft intern advice aspect 1' or activity='t07-2 draft intern advice aspect 2' or activity='t07-3 draft intern advice hold for aspect 3' or activity='t07-4 draft internal advice to hold for type 4' or activity='t07-5 draft intern advice aspect 5' or activity='t08 draft and send request for advice' or activity='t09-1 process or receive external advice from party 1' or activity='t09-2 process or receive external advice from party 2' or activity='t09-3 process or receive external advice from party 3' or activity='t09-4 process or receive external advice from party 4' or activity='confirmation of receipt') -> every succ=UnlabeledEvent(activity='t07-4 draft internal advice to hold for type 4')) where timer:within(81 min)]#time(81 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=80400000;

@Priority(20) @Name('Correlate_t07_4_draft_internal_advice_to_hold_for_type_4') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't07-4 draft internal advice to hold for type 4'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t07_4_draft_internal_advice_to_hold_for_type_4') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't07-4 draft internal advice to hold for type 4'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t07_5_draft_intern_advice_aspect_5') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't07-5 draft intern advice aspect 5' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t03 adjust confirmation of receipt' or activity='t07-1 draft intern advice aspect 1' or activity='t07-2 draft intern advice aspect 2' or activity='t07-3 draft intern advice hold for aspect 3' or activity='t07-4 draft internal advice to hold for type 4' or activity='t07-5 draft intern advice aspect 5' or activity='t08 draft and send request for advice' or activity='t09-1 process or receive external advice from party 1' or activity='t09-2 process or receive external advice from party 2' or activity='t09-3 process or receive external advice from party 3' or activity='t09-4 process or receive external advice from party 4' or activity='confirmation of receipt') -> every succ=UnlabeledEvent(activity='t07-5 draft intern advice aspect 5')) where timer:within(83 min)]#time(83 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=82740000;

@Priority(20) @Name('Correlate_t07_5_draft_intern_advice_aspect_5') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't07-5 draft intern advice aspect 5'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t07_5_draft_intern_advice_aspect_5') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't07-5 draft intern advice aspect 5'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t08_draft_and_send_request_for_advice') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't08 draft and send request for advice' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t03 adjust confirmation of receipt' or activity='t07-1 draft intern advice aspect 1' or activity='t07-2 draft intern advice aspect 2' or activity='t07-3 draft intern advice hold for aspect 3' or activity='t07-4 draft internal advice to hold for type 4' or activity='t07-5 draft intern advice aspect 5' or activity='t08 draft and send request for advice' or activity='t09-1 process or receive external advice from party 1' or activity='t09-2 process or receive external advice from party 2' or activity='t09-3 process or receive external advice from party 3' or activity='t09-4 process or receive external advice from party 4' or activity='confirmation of receipt') -> every succ=UnlabeledEvent(activity='t08 draft and send request for advice')) where timer:within(73 min)]#time(73 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=72000000;

@Priority(20) @Name('Correlate_t08_draft_and_send_request_for_advice') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't08 draft and send request for advice'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t08_draft_and_send_request_for_advice') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't08 draft and send request for advice'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t09_1_process_or_receive_external_advice_from_party_1') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't09-1 process or receive external advice from party 1' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t03 adjust confirmation of receipt' or activity='t07-1 draft intern advice aspect 1' or activity='t07-2 draft intern advice aspect 2' or activity='t07-3 draft intern advice hold for aspect 3' or activity='t07-4 draft internal advice to hold for type 4' or activity='t07-5 draft intern advice aspect 5' or activity='t08 draft and send request for advice' or activity='t09-1 process or receive external advice from party 1' or activity='t09-2 process or receive external advice from party 2' or activity='t09-3 process or receive external advice from party 3' or activity='t09-4 process or receive external advice from party 4' or activity='confirmation of receipt') -> every succ=UnlabeledEvent(activity='t09-1 process or receive external advice from party 1')) where timer:within(1 min)]#time(1 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=480000;

@Priority(20) @Name('Correlate_t09_1_process_or_receive_external_advice_from_party_1') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't09-1 process or receive external advice from party 1'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t09_1_process_or_receive_external_advice_from_party_1') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't09-1 process or receive external advice from party 1'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t09_2_process_or_receive_external_advice_from_party_2') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't09-2 process or receive external advice from party 2' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t03 adjust confirmation of receipt' or activity='t07-1 draft intern advice aspect 1' or activity='t07-2 draft intern advice aspect 2' or activity='t07-3 draft intern advice hold for aspect 3' or activity='t07-4 draft internal advice to hold for type 4' or activity='t07-5 draft intern advice aspect 5' or activity='t08 draft and send request for advice' or activity='t09-1 process or receive external advice from party 1' or activity='t09-2 process or receive external advice from party 2' or activity='t09-3 process or receive external advice from party 3' or activity='t09-4 process or receive external advice from party 4' or activity='confirmation of receipt') -> every succ=UnlabeledEvent(activity='t09-2 process or receive external advice from party 2')) where timer:within(1 min)]#time(1 min)  where succ.timestamp - pred.timestamp >= 600 and succ.timestamp - pred.timestamp <=600000;

@Priority(20) @Name('Correlate_t09_2_process_or_receive_external_advice_from_party_2') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't09-2 process or receive external advice from party 2'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t09_2_process_or_receive_external_advice_from_party_2') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't09-2 process or receive external advice from party 2'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t09_3_process_or_receive_external_advice_from_party_3') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't09-3 process or receive external advice from party 3' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t03 adjust confirmation of receipt' or activity='t07-1 draft intern advice aspect 1' or activity='t07-2 draft intern advice aspect 2' or activity='t07-3 draft intern advice hold for aspect 3' or activity='t07-4 draft internal advice to hold for type 4' or activity='t07-5 draft intern advice aspect 5' or activity='t08 draft and send request for advice' or activity='t09-1 process or receive external advice from party 1' or activity='t09-2 process or receive external advice from party 2' or activity='t09-3 process or receive external advice from party 3' or activity='t09-4 process or receive external advice from party 4' or activity='confirmation of receipt') -> every succ=UnlabeledEvent(activity='t09-3 process or receive external advice from party 3')) where timer:within(4 min)]#time(4 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=3540000;

@Priority(20) @Name('Correlate_t09_3_process_or_receive_external_advice_from_party_3') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't09-3 process or receive external advice from party 3'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t09_3_process_or_receive_external_advice_from_party_3') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't09-3 process or receive external advice from party 3'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t09_4_process_or_receive_external_advice_from_party_4') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't09-4 process or receive external advice from party 4' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t03 adjust confirmation of receipt' or activity='t07-1 draft intern advice aspect 1' or activity='t07-2 draft intern advice aspect 2' or activity='t07-3 draft intern advice hold for aspect 3' or activity='t07-4 draft internal advice to hold for type 4' or activity='t07-5 draft intern advice aspect 5' or activity='t08 draft and send request for advice' or activity='t09-1 process or receive external advice from party 1' or activity='t09-2 process or receive external advice from party 2' or activity='t09-3 process or receive external advice from party 3' or activity='t09-4 process or receive external advice from party 4' or activity='confirmation of receipt') -> every succ=UnlabeledEvent(activity='t09-4 process or receive external advice from party 4')) where timer:within(3 min)]#time(3 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=2220000;

@Priority(20) @Name('Correlate_t09_4_process_or_receive_external_advice_from_party_4') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't09-4 process or receive external advice from party 4'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t09_4_process_or_receive_external_advice_from_party_4') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't09-4 process or receive external advice from party 4'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t11_create_document_x_request_unlicensed') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't11 create document x request unlicensed' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t03 adjust confirmation of receipt' or activity='t07-1 draft intern advice aspect 1' or activity='t07-2 draft intern advice aspect 2' or activity='t07-3 draft intern advice hold for aspect 3' or activity='t07-4 draft internal advice to hold for type 4' or activity='t07-5 draft intern advice aspect 5' or activity='t08 draft and send request for advice' or activity='t09-1 process or receive external advice from party 1' or activity='t09-2 process or receive external advice from party 2' or activity='t09-3 process or receive external advice from party 3' or activity='t09-4 process or receive external advice from party 4' or activity='confirmation of receipt') -> every succ=UnlabeledEvent(activity='t11 create document x request unlicensed')) where timer:within(84 min)]#time(84 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=83100000;

@Priority(20) @Name('Correlate_t11_create_document_x_request_unlicensed') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't11 create document x request unlicensed'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t11_create_document_x_request_unlicensed') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't11 create document x request unlicensed'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t16_report_reasons_to_hold_request') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't16 report reasons to hold request' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t03 adjust confirmation of receipt' or activity='t07-1 draft intern advice aspect 1' or activity='t07-2 draft intern advice aspect 2' or activity='t07-3 draft intern advice hold for aspect 3' or activity='t07-4 draft internal advice to hold for type 4' or activity='t07-5 draft intern advice aspect 5' or activity='t08 draft and send request for advice' or activity='t09-1 process or receive external advice from party 1' or activity='t09-2 process or receive external advice from party 2' or activity='t09-3 process or receive external advice from party 3' or activity='t09-4 process or receive external advice from party 4' or activity='confirmation of receipt') -> every succ=UnlabeledEvent(activity='t16 report reasons to hold request')) where timer:within(83 min)]#time(83 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=82140000;

@Priority(20) @Name('Correlate_t16_report_reasons_to_hold_request') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't16 report reasons to hold request'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t16_report_reasons_to_hold_request') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't16 report reasons to hold request'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t02_check_confirmation_of_receipt') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't02 check confirmation of receipt' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t12 check document x request unlicensed' or activity='t08 draft and send request for advice' or activity='t09-1 process or receive external advice from party 1' or activity='t09-2 process or receive external advice from party 2' or activity='t09-3 process or receive external advice from party 3' or activity='t09-4 process or receive external advice from party 4' or activity='t03 adjust confirmation of receipt' or activity='confirmation of receipt' or activity='t07-1 draft intern advice aspect 1' or activity='t07-2 draft intern advice aspect 2' or activity='t07-3 draft intern advice hold for aspect 3' or activity='t07-4 draft internal advice to hold for type 4' or activity='t07-5 draft intern advice aspect 5' or activity='t20 print report y to stop indication') -> every succ=UnlabeledEvent(activity='t02 check confirmation of receipt')) where timer:within(87 min)]#time(87 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=86340000;

@Priority(20) @Name('Correlate_t02_check_confirmation_of_receipt') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't02 check confirmation of receipt'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t02_check_confirmation_of_receipt') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't02 check confirmation of receipt'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t04_determine_confirmation_of_receipt') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't04 determine confirmation of receipt' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t12 check document x request unlicensed' or activity='t08 draft and send request for advice' or activity='t09-1 process or receive external advice from party 1' or activity='t09-2 process or receive external advice from party 2' or activity='t09-3 process or receive external advice from party 3' or activity='t09-4 process or receive external advice from party 4' or activity='t03 adjust confirmation of receipt' or activity='confirmation of receipt' or activity='t07-1 draft intern advice aspect 1' or activity='t07-2 draft intern advice aspect 2' or activity='t07-3 draft intern advice hold for aspect 3' or activity='t07-4 draft internal advice to hold for type 4' or activity='t07-5 draft intern advice aspect 5' or activity='t20 print report y to stop indication') -> every succ=UnlabeledEvent(activity='t04 determine confirmation of receipt')) where timer:within(87 min)]#time(87 min)  where succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=86220000;

@Priority(20) @Name('Correlate_t04_determine_confirmation_of_receipt') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't04 determine confirmation of receipt'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t04_determine_confirmation_of_receipt') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't04 determine confirmation of receipt'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t05_print_and_send_confirmation_of_receipt') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't05 print and send confirmation of receipt' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t14 determine document x request unlicensed') -> every succ=UnlabeledEvent(activity='t05 print and send confirmation of receipt'))  or ((every pred=FilterLabeledEvent(activity='t04 determine confirmation of receipt') and every inter1 = FilterLabeledEvent(activity='t02 check confirmation of receipt')) -> every succ=UnlabeledEvent(activity='t05 print and send confirmation of receipt')) where timer:within(87 min) ]#time(87 min)  where ( pred.caseID = inter1.caseID and (succ.timestamp - max(pred.timestamp,inter1.timestamp)) >= 0 and (succ.timestamp - max(pred.timestamp,inter1.timestamp)) <=86340000 ) or ( succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=86340000 )  ;

@Priority(20) @Name('Correlate_t05_print_and_send_confirmation_of_receipt') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't05 print and send confirmation of receipt'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t05_print_and_send_confirmation_of_receipt') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't05 print and send confirmation of receipt'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

@Priority(5) @Name('TE_t06_determine_necessity_of_stop_advice') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 't06 determine necessity of stop advice' as activity, succ.timestamp as timestamp from pattern [(every pred=FilterLabeledEvent(activity='t14 determine document x request unlicensed' or activity='t05 print and send confirmation of receipt') -> every succ=UnlabeledEvent(activity='t06 determine necessity of stop advice'))  or ((every pred=FilterLabeledEvent(activity='t04 determine confirmation of receipt') and every inter1 = FilterLabeledEvent(activity='t02 check confirmation of receipt')) -> every succ=UnlabeledEvent(activity='t06 determine necessity of stop advice')) where timer:within(87 min) ]#time(87 min)  where ( pred.caseID = inter1.caseID and (succ.timestamp - max(pred.timestamp,inter1.timestamp)) >= 0 and (succ.timestamp - max(pred.timestamp,inter1.timestamp)) <=86340000 ) or ( succ.timestamp - pred.timestamp >= 0 and succ.timestamp - pred.timestamp <=86340000 )  ;

@Priority(20) @Name('Correlate_t06_determine_necessity_of_stop_advice') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 't06 determine necessity of stop advice'  group by caseID order by timestamp; 

@Priority(50) @Name('Filter_t06_determine_necessity_of_stop_advice') insert into FilterLabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , probability from LabeledEvent.win:time(1 sec) as T where activity = 't06 determine necessity of stop advice'  and probability >= 0.3 group by caseID order by probability desc limit 3 ;

