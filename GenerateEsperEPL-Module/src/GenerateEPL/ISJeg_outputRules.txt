// create a table to hold the state of the current caseID
create table Cases (caseID long primary key);

//an incoming stream of unlabeled events (activity name and its timestamp) 
create schema UnlabeledEvent(caseID long, activity string, timestamp long, probability double);
@Name('Unlabeled') select * from UnlabeledEvent;

//an outgoing stream of final labeled events (caseID, activity name, its timestamp, calculated probability )
create schema LabeledEvent(caseID long, activity string, timestamp long, probability double);
@Name('Labeled') select * from LabeledEvent;

//an intermediate stream to check the possible labels for incoming unlabeled events. These should be temporary and need to be deleted after usage. 
create schema TempEvent (caseID long, activity string, timestamp long, probability double);
@Name('TempEvent') select * from TempEvent ;
@Name('Unlabeled') select * from UnlabeledEvent; 
@Name('Labeled') select * from LabeledEvent; 
@Name('Temp') select * from TempEvent ; 
@Name('get_case_ID')  insert into Cases  select (select coalesce(max(caseID)+1, 1)  from  Cases )  as caseID from UnlabeledEvent  where  activity in ('accepted');  
@Name('start_case_accepted')  insert into LabeledEvent (caseID, activity, timestamp, probability)  select (select coalesce(max(caseID)+1,1) from Cases) as caseID, UE.activity, UE.timestamp, 1.0  from UnlabeledEvent as UE where UE.activity = 'accepted'; 

@Priority(5) @Name('TE_b') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'b' as activity, succ.timestamp as timestamp from pattern [(every pred=LabeledEvent(activity='a' or activity='n')) -> every succ=UnlabeledEvent(activity='b') ]#time(4 sec)  where succ.timestamp - pred.timestamp >= 1000 and succ.timestamp - pred.timestamp <=4000;
@Priority(20) @Name('Correlate_b') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'b'  group by caseID order by timestamp; 

@Priority(5) @Name('TE_c') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'c' as activity, succ.timestamp as timestamp from pattern [(every pred=LabeledEvent(activity = 'b')) -> every succ=UnlabeledEvent(activity='c') ]#time(2 sec)  where succ.timestamp - pred.timestamp >= 1000 and succ.timestamp - pred.timestamp <=2000;
@Priority(20) @Name('Correlate_c') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'c'  group by caseID order by timestamp; 

@Priority(5) @Name('TE_d') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'd' as activity, succ.timestamp as timestamp from pattern [(every pred=LabeledEvent(activity = 'b')) -> every succ=UnlabeledEvent(activity='d') ]#time(1 sec)  where succ.timestamp - pred.timestamp >= 1000 and succ.timestamp - pred.timestamp <=1000;
@Priority(20) @Name('Correlate_d') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'd'  group by caseID order by timestamp; 

@Priority(5) @Name('TE_i') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'i' as activity, succ.timestamp as timestamp from pattern [(every pred=LabeledEvent(activity = 'c')) -> every succ=UnlabeledEvent(activity='i') ]#time(7 sec)  where succ.timestamp - pred.timestamp >= 1000 and succ.timestamp - pred.timestamp <=7000;
@Priority(20) @Name('Correlate_i') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'i'  group by caseID order by timestamp; 

@Priority(5) @Name('TE_j') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'j' as activity, succ.timestamp as timestamp from pattern [(every pred=LabeledEvent(activity = 'c')) -> every succ=UnlabeledEvent(activity='j') ]#time(4 sec)  where succ.timestamp - pred.timestamp >= 3000 and succ.timestamp - pred.timestamp <=4000;
@Priority(20) @Name('Correlate_j') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'j'  group by caseID order by timestamp; 

@Priority(5) @Name('TE_e') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'e' as activity, succ.timestamp as timestamp from pattern [(every pred=LabeledEvent(activity='d' or activity='h')) -> every succ=UnlabeledEvent(activity='e') ]#time(7 sec)  where succ.timestamp - pred.timestamp >= 1000 and succ.timestamp - pred.timestamp <=7000;
@Priority(20) @Name('Correlate_e') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'e'  group by caseID order by timestamp; 

@Priority(5) @Name('TE_g') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'g' as activity, succ.timestamp as timestamp from pattern [(every pred=LabeledEvent(activity = 'e')) -> every succ=UnlabeledEvent(activity='g') ]#time(3 sec)  where succ.timestamp - pred.timestamp >= 1000 and succ.timestamp - pred.timestamp <=3000;
@Priority(20) @Name('Correlate_g') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'g'  group by caseID order by timestamp; 

@Priority(5) @Name('TE_f') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'f' as activity, succ.timestamp as timestamp from pattern [(every pred=LabeledEvent(activity = 'e')) -> every succ=UnlabeledEvent(activity='f') ]#time(2 sec)  where succ.timestamp - pred.timestamp >= 2000 and succ.timestamp - pred.timestamp <=2000;
@Priority(20) @Name('Correlate_f') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'f'  group by caseID order by timestamp; 

@Priority(5) @Name('TE_h') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'h' as activity, succ.timestamp as timestamp from pattern [(every pred=LabeledEvent(activity = 'f')) -> every succ=UnlabeledEvent(activity='h') ]#time(3 sec)  where succ.timestamp - pred.timestamp >= 3000 and succ.timestamp - pred.timestamp <=3000;
@Priority(20) @Name('Correlate_h') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'h'  group by caseID order by timestamp; 

@Priority(5) @Name('TE_l') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'l' as activity, succ.timestamp as timestamp from pattern [( every pred=LabeledEvent(activity='i') or (every pred=LabeledEvent(activity='i') and every inter=LabeledEvent(activity='j')) ) -> every succ=UnlabeledEvent(activity='l') ]#time(11 sec)  where pred.caseID = inter.caseID and (succ.timestamp - max(pred.timestamp,inter.timestamp)) >= 2000 and (succ.timestamp - max(pred.timestamp,inter.timestamp)) <=11000;
@Priority(20) @Name('Correlate_l') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'l'  group by caseID order by timestamp; 

@Priority(5) @Name('TE_n') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'n' as activity, succ.timestamp as timestamp from pattern [(every pred=LabeledEvent(activity = 'l')) -> every succ=UnlabeledEvent(activity='n') ]#time(1 sec)  where succ.timestamp - pred.timestamp >= 1000 and succ.timestamp - pred.timestamp <=1000;
@Priority(20) @Name('Correlate_n') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'n'  group by caseID order by timestamp; 

@Priority(5) @Name('TE_m') insert into TempEvent (caseID, activity, timestamp) select distinct pred.caseID, 'm' as activity, succ.timestamp as timestamp from pattern [(every pred=LabeledEvent(activity = 'l')) -> every succ=UnlabeledEvent(activity='m') ]#time(9 sec)  where succ.timestamp - pred.timestamp >= 1000 and succ.timestamp - pred.timestamp <=9000;
@Priority(20) @Name('Correlate_m') insert into LabeledEvent (caseID, activity , timestamp, probability) select distinct caseID as caseID, last(activity) as activity, max(timestamp) as timestamp , min(((select count(caseID)  from TempEvent.win:time_batch(1 sec) where caseID = T.caseID and activity = T.activity and timestamp=T.timestamp) /count(all caseID, group_by:timestamp)),1.0) as probability from TempEvent.win:time_batch(1 sec) as T  where activity = 'm'  group by caseID order by timestamp; 

